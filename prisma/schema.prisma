generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String?     @default("default") @db.VarChar(191)
  email      String?     @unique @default("default")
  provider   String?     @default("default")
  oauth_id   String?     @default("default")
  image      String?     @default("default")
  created_at DateTime    @default(now())
  Chats      Chats[]
  Telegram   Telegrams[]

  @@map("users")
}

model Telegrams {
  chat_id    BigInt   @unique
  first_name String
  last_name  String
  username   String
  created_at DateTime @default(now())
  user_id    Int
  user       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade) // Обратная связь

  @@map("telegrams")
}

model Tracking {
  chat_id    BigInt   @unique
  first_name String?
  last_name  String?
  username   String?
  tracking   Boolean  @default(false)
  answer     Boolean  @default(false)
  created_at DateTime @default(now())

  @@map("tracking")
}

model Chats {
  id            String   @id @default(uuid())
  cause         String
  message       String?
  clients_name  String?
  managers_name String?
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       Int
  created_at    DateTime @default(now())

  @@index([created_at])
  @@map("chats")
}
