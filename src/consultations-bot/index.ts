import { Telegraf } from "telegraf";
import { config } from "../config/config.js";
import consultationsService from "../services/common-db.js";
import senderService from "../services/sender.js";
import {MessagesData} from "../types/common.js";
import {handlePolicyAgreement} from "../component/handlePolicyAgreement.js";
import {conductionBot} from "../conduction-bot/index.js";
import {sendKeyboard} from "../component/sendKeyboard.js";
import {handleMessage} from "../component/handleMessage.js";


const token = process.env.NODE_ENV === 'production'
    ? config.CONS_BOT_TOKEN
    : config.DEV_CONS_BOT_TOKEN;

if (!token) {
    throw new Error('AnswererBot token is not defined!');
}
const consultationBot = new Telegraf(token);

const webTerms = config.URL_TERMS
const webPrivacy = config.URL_PRIVACY

const start = "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –≤–∞—à–∏–º —Ä–µ–±–µ–Ω–∫–æ–º. –ó–∞–ø—É—Ç–∞–ª–∏—Å—å –≤ —Ä–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω—ã—Ö –¥–∏–∞–≥–Ω–æ–∑–∞—Ö, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö –∏ —Å–æ–≤–µ—Ç–∞—Ö. –£—Å—Ç–∞–ª–∏ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∏—Å—Ç–µ—Ä–∏–∫, –∫–∞–ø—Ä–∏–∑–æ–≤ –∏ –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç.\n" +
    "–¢–æ–≥–¥–∞ —ç—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–ª—è –≤–∞—Å!\n" +
    "\n"+
    "üîπ –ö–∞–ø—Ä–∏–∑—ã –∏ –∏—Å—Ç–µ—Ä–∏–∫–∏:\n" +
    " –ú—ã —Ä–∞–∑–±–µ—Ä–µ–º—Å—è, —á—Ç–æ —Å—Ç–æ–∏—Ç –∑–∞ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º —Ä–µ–±—ë–Ω–∫–∞, –∏ –Ω–∞–π–¥–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã, —á—Ç–æ–±—ã —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –≤—Å–ø–ª–µ—Å–∫–∞–º–∏.\n" +
    "üîπ –ó–∞–¥–µ—Ä–∂–∫–∞ —Ä–µ—á–∏, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –≥–∞–¥–∂–µ—Ç–æ–≤, –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–∏—Ç–∞–Ω–∏–µ–º:" +
    " –Ø –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ –ø–æ–º–æ—á—å –º–∞–ª—ã—à—É —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –≥–∞—Ä–º–æ–Ω–∏—á–Ω–æ, –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –¥–ª—è –≤–∞—Å –æ–±–æ–∏—Ö.\n" +
    "üîπ –£—Å—Ç–∞–ª–æ—Å—Ç—å, –≤—ã–≥–æ—Ä–∞–Ω–∏–µ, —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã –∏ —Å—Ä—ã–≤—ã –Ω–∞ —Ä–µ–±—ë–Ω–∫–µ:" +
    " –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º –±–∞–ª–∞–Ω—Å, —É–±–µ—Ä—ë–º —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã –∏ –≤–µ—Ä–Ω—ë–º —Ä–∞–¥–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞.\n" +
    "üîπ –ü—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è, —Ä–∞–∑–≤–∏—Ç–∏–µ –±–µ–∑ –Ω–∞—Å–∏–ª–∏—è –∏ –ú–ù–û–ì–û–ï –î–†–£–ì–û–ï:" +
    " –Ø –ø–æ–º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –¥–∞–∂–µ –≤ —Å–∞–º—ã—Ö —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö.\n" +
    "\n"+
    "üë©‚Äç‚öïÔ∏è 30+ –ª–µ—Ç –æ–ø—ã—Ç–∞ –≤ –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–µ, —Ä–∞–∑–≤–∏—Ç–∏–∏, –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ –ø–µ–¥–∏–∞—Ç—Ä–∏–∏ ‚Äì —Ç–µ–ø–µ—Ä—å –¥–ª—è –≤–∞—Å!\n" +
    "\n"+
    " –Ø –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é, –∏–∑—É—á—É –∏–º–µ—é—â–∏–µ—Å—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω—é –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é —á–µ—Ç–∫–∏–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π, –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É. \n" +
    "\n"+
    "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø—Ä–æ—Ö–æ–¥–∏—Ç –∫–∞–∫ –æ–Ω–ª–∞–π–Ω –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è (–æ–∫–æ–ª–æ 90 –º–∏–Ω—É—Ç) —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–¥–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏.\n"

    consultationBot.start(async (ctx) => {
    try {
        const commandText = ctx.message.text.toLowerCase();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã –∑–∞–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
        if (commandText === '/start@mrk_new_bot') {
            // –ü—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
            return;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.replyWithHTML(
            `<b>–î–æ–±—Ä—ã–π –¥–µ–Ω—å ${ctx.message.from.first_name ? ctx.message.from.first_name : '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}!</b>\n\n${start}`,
            {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: "üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é üìù", callback_data: 'apply_for_consultation' }
                        ]
                    ],
                }
            }
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.reply(
            "–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏  –∏–ª–∏ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É",
            {
                reply_markup: {
                    keyboard: [
                        [
                            { text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ" },
                            { text: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" }
                        ]
                    ],
                    resize_keyboard: true, // –î–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –±–æ–ª—å—à–∏–º–∏
                    one_time_keyboard: false // –ö–Ω–æ–ø–∫–∏ –∏—Å—á–µ–∑–Ω—É—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
                }
            }
        );


        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ Telegrams –∏ User
        await consultationsService.start({
            chat_id: ctx.message.from.id,
            first_name: ctx.message.from.first_name || "default",
            last_name: ctx.message.from.last_name || "default",
            username: ctx.message.from.username || "default",
        });

    } catch (e) {
        console.error("Error in /start command:", e);
    }
});



consultationBot.command('request', async (ctx) => {
    await sendKeyboard(ctx, "–í—ã –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É...");
    console.log(ctx.message.from);

    const data = {
        chat_id: ctx.message.from.id,
        first_name: ctx.message.from.first_name,
        last_name: ctx.message.from.last_name,
        username: ctx.message.from.username,
        message: "–ü–æ–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é",
        cause: 'consultation_request',
    };

    await handleMessage(data);
    const check = await consultationsService.checkPrivacyByClient(ctx.message.from.id);
    if (!check) {
        await ctx.reply(
            '–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
            {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: "–î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ", callback_data: 'apply_for_privacy' }
                        ]
                    ],
                }
            });
    } else {
        await ctx.reply('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ!\n' +
            '\n' +
            '–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n' +
            '\n' +
            '–ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–Ω—è –∏ –≤—Ä–µ–º–µ–Ω–∏ (–ø–æ –ú–°–ö), –∫–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ.\n');
    }


});

consultationBot.hears('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ', async (ctx) => {
    await handlePolicyAgreement(ctx, "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", webTerms);
});

consultationBot.hears('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', async (ctx) => {
    await handlePolicyAgreement(ctx, "–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", webPrivacy);
});
consultationBot.on('text', async (ctx) => {
    try {
        await sendKeyboard(ctx, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ...");
        const data = {
            chat_id: ctx.message.from.id,
            first_name:ctx.message.from.first_name,
            last_name:ctx.message.from.last_name,
            username:ctx.message.from.username,
            message: ctx.message.text,
            cause: 'consultation_request'
        }
        await handleMessage(data);

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
});

consultationBot.action('apply_for_consultation', async (ctx) => {
    console.log(ctx.update.callback_query.from)
    const data = {
        chat_id: ctx.update.callback_query.from.id,
        first_name:ctx.update.callback_query.from.first_name,
        last_name:ctx.update.callback_query.from.last_name,
        username:ctx.update.callback_query.from.username,
        message: "–ü–æ–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é",
        cause: 'conducting_request'
    }
    await handleMessage(data);
    // –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
    await ctx.answerCbQuery(); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    const check = await consultationsService.checkPrivacyByClient(ctx.update.callback_query.from.id);
    if (!check) {
        await ctx.reply(
            '–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
            {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: "–î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ", callback_data: 'apply_for_privacy' }
                        ]
                    ],
                }
            });
    } else {
        await ctx.reply('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ!\n' +
            '\n' +
            '–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n' +
            '\n' +
            '–ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–Ω—è –∏ –≤—Ä–µ–º–µ–Ω–∏ (–ø–æ –ú–°–ö), –∫–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ.\n');
    }
});

consultationBot.action('apply_for_privacy', async (ctx) => {
    await ctx.answerCbQuery(); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    console.log(ctx.update.callback_query.from)
    const data = {
        chat_id: ctx.update.callback_query.from.id,
        first_name:ctx.update.callback_query.from.first_name,
        last_name:ctx.update.callback_query.from.last_name,
        username:ctx.update.callback_query.from.username,
        message: "–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–µ–Ω–æ",
        cause: 'privacy_request'
    }
    await handleMessage(data);
    await ctx.reply('–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ!\n' +
        '\n' +
        '–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n' +
        '\n'+
        '–ß—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –¥–Ω—è –∏ –≤—Ä–µ–º–µ–Ω–∏ (–ø–æ –ú–°–ö), –∫–æ–≥–¥–∞ –≤–∞–º —É–¥–æ–±–Ω–æ.\n');
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
});

// –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
export { consultationBot };

