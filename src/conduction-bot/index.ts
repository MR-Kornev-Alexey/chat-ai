import { Telegraf } from "telegraf";
import { config } from "../config/config.js";
import consultationsService from "../services/consultations.js";
import senderService from "../services/sender.js";
const conductionBot = new Telegraf(config.CONDUCT_BOT_TOKEN);

const webPayment = config.URL_PAY_CONSULTATION
const webCall = config.URL_CALL_CONDUCTING
const webTerms = config.URL_TERMS
const webPrivacy = config.URL_PRIVACY
const start = "–ú–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–æ –±–µ–∑ –≤—ã–≥–æ—Ä–∞–Ω–∏—è –∏ —á—É–≤—Å—Ç–≤–∞ –≤–∏–Ω—ã ‚Äì —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å!\n" +
     "–¢—ã –Ω–µ –æ–±—è–∑–∞–Ω–∞ —Ä–µ—à–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –æ–¥–∏–Ω–æ—á–∫—É. –ï—Å–ª–∏ –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ —Å —Ä–µ–±—ë–Ω–∫–æ–º, —É—Å—Ç–∞–ª–æ—Å—Ç—å, —Å—Ä—ã–≤—ã –∏ —á—É–≤—Å—Ç–≤–æ –≤–∏–Ω—ã —Å—Ç–∞–ª–∏ —Ç–≤–æ–∏–º–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ —Å–ø—É—Ç–Ω–∏–∫–∞–º–∏, —è –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –¥–ª—è —Ç–µ–±—è –∏ –º–∞–ª—ã—à–∞.\n" +
     "–£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å  -  –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è  —Ä–∞–±–æ—Ç–∞ –≤ –¥–≤—É—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö ‚Äì —Å –º–∞–º–æ–π –∏ —Å —Ä–µ–±—ë–Ω–∫–æ–º. –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫—É—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –±—ã—Å—Ç—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.\n" +
     "–ß—Ç–æ —Ç–µ–±—è –∂–¥–µ—Ç?\n" +
     "–î–ª—è –º–∞–º—ã:\n" +
     " üí° –°–ø—Ä–∞–≤–∏–º—Å—è —Å –≤—ã–≥–æ—Ä–∞–Ω–∏–µ–º, –≤–µ—Ä–Ω–µ–º —Ç–≤–æ–∏ —Å–∏–ª—ã –∏ –±–∞–ª–∞–Ω—Å. –¢—ã —Å–Ω–æ–≤–∞ –ø–æ—á—É–≤—Å—Ç–≤—É–µ—à—å —Ä–∞–¥–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–∞ –∏ –æ–±—Ä–µ—Ç–µ—à—å —Ä–µ—Å—É—Ä—Å –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.\n" +
     "–î–ª—è –º–∞–ª—ã—à–∞:\n" +
     " üë∂ –í–º–µ—Å—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è —Å –∏—Å—Ç–µ—Ä–∏–∫–∞–º–∏, –∫–∞–ø—Ä–∏–∑–∞–º–∏, –∑–∞–¥–µ—Ä–∂–∫–æ–π —Ä–µ—á–∏, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å—é –æ—Ç –≥–∞–¥–∂–µ—Ç–æ–≤, –ø—Ä–æ–±–ª–µ–º–∞–º–∏ —Å –ø–∏—Ç–∞–Ω–∏–µ–º –∏ –ø—Ä–∏—É—á–µ–Ω–∏–µ–º –∫ –≥–æ—Ä—à–∫—É. –ü—Ä–æ–∫–∞—á–∞–µ–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É–º–µ–Ω–∏—è –∏ –ø–æ–º–æ–∂–µ–º —Ä–∞—Å–∫—Ä—ã—Ç—å –∑–∞–ª–æ–∂–µ–Ω–Ω—ã–π –ø—Ä–∏—Ä–æ–¥–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª.\n" +
     "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?\n" +
     "üîπ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ ‚Äì –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω, –ø–æ –≤—ã–±–æ—Ä—É.\n" +
     "üîπ –£–¥–æ–±–Ω—ã–µ —Å–æ–∑–≤–æ–Ω—ã, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ WhatsApp/Telegram.\n" +
     "üîπ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —á—Ç–æ–±—ã —à–∞–≥ –∑–∞ —à–∞–≥–æ–º –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É.\n" +
     " üîπ –†–∞–±–æ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ —Å–æ–∑–≤–æ–Ω–∞, –≥–¥–µ  —É—Ç–æ—á–Ω—è–µ–º –ø—Ä–æ–±–ª–µ–º—É –∏ –≤—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –¥–ª—è –≤–∞—Å —Å –º–∞–ª—ã—à–æ–º.\n" +
     "–ü—Ä–∏–º–∏ —Ä–µ—à–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è, —á—Ç–æ–±—ã –∑–∞–≤—Ç—Ä–∞ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è —è—Ä–∫–æ–º—É –º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤—É –±–µ–∑ –≤—ã–≥–æ—Ä–∞–Ω–∏—è –∏ —Å –ª—é–±–æ–≤—å—é –∫ —Å–µ–±–µ –∏ —Å–≤–æ–µ–º—É –º–∞–ª—ã—à—É!\n"


conductionBot.start(async (ctx) => {
    try {
        const commandText = ctx.message.text.toLowerCase();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã –∑–∞–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
        if (commandText === '/start@mrk_new_bot') {
            // –ü—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
            return;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.replyWithHTML(
            `<b>–î–æ–±—Ä—ã–π –¥–µ–Ω—å ${ctx.message.from.first_name ? ctx.message.from.first_name : '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}!\n</b>${start}`,
            {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: "üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–µ–¥–µ–Ω–∏–µ üìù", url: webCall }
                        ],
                    ],
                }
            }
        );

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.reply(
            "–í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–µ–¥–µ–Ω–∏–µ",
            {
                reply_markup: {
                    keyboard: [
                        [
                            { text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ" },
                            { text: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" }
                        ]
                    ],
                    resize_keyboard: true, // –î–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –±–æ–ª—å—à–∏–º–∏
                    one_time_keyboard: false // –ö–Ω–æ–ø–∫–∏ –∏—Å—á–µ–∑–Ω—É—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
                }
            }
        );


        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ Telegrams –∏ User
        await consultationsService.start({
            chat_id: ctx.message.from.id,
            first_name: ctx.message.from.first_name || "default",
            last_name: ctx.message.from.last_name || "default",
            username: ctx.message.from.username || "default",
        });

    } catch (e) {
        console.error("Error in /start command:", e);
    }
});
conductionBot.hears('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ', async (ctx) => {
    await ctx.reply("–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url: webTerms }
                ]
            ]
        }
    });
});

conductionBot.hears('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', async (ctx) => {
    await ctx.reply("–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url: webPrivacy }
                ]
            ]
        }
    });
});

conductionBot.on('text', async (ctx) => {
    try {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ Chats
        await consultationsService.saveMessage({
            chat_id: ctx.message.from.id,
            message: ctx.message.text,
            first_name: ctx.message.from.first_name || "default",
            last_name: ctx.message.from.last_name || "default",
            cause: "conducting_request"
        });

        await senderService.sendMessage({
                chat_id: ctx.message.from.id,
                letter: ctx.message.text,
                first_name: ctx.message.from.first_name || "nothing",
                last_name: ctx.message.from.last_name || "nothing",
                username: ctx.message.from.username || "nothing",
                cause: "conducting_request"
            }
        )
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await ctx.reply("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
    } catch (error) {
        console.error("Error saving message:", error);
        await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.");
    }
});


export { conductionBot };

