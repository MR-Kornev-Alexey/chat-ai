import { Telegraf } from "telegraf";
import { config } from "../config/config.js";
import consultationsService from "../services/common-db.js";
import senderService from "../services/sender.js";
const token = process.env.NODE_ENV === 'production'
    ? config.SPEAK_BOT_TOKEN
    : config.DEV_SPEAK_BOT_TOKEN;
if (!token) {
    throw new Error('AnswererBot token is not defined!');
}
const speakBot = new Telegraf(token);
const webSpeak = config.URL_SPEAK_INTENSIVE;
const webTerms = config.URL_TERMS;
const webPrivacy = config.URL_PRIVACY;
const paySpeakUndefended = config.URL_PAY_SPEAK_INDEPENDENT;
const paySpeakAll = config.URL_PAY_SPEAK_ALL;
const start = "¬´–û—Ç –∑–≤—É–∫–∞ –∫ —Å–ª–æ–≤—É¬ª - –∏–Ω—Ç–µ–Ω—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å—Ç–∏—Ç —Ä–µ—á—å –≤–∞—à–µ–≥–æ –º–∞–ª—ã—à–∞!\n" +
    "–í—ã –∂–¥—ë—Ç–µ —Å–ª–æ–≤ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Ä–µ–±—ë–Ω–∫–∞, –Ω–æ –æ–Ω–∏ —Ç–∞–∫ –∏ –Ω–µ –ø–æ—è–≤–ª—è—é—Ç—Å—è? –£—Å—Ç–∞–ª–∏ –æ—Ç –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏–≤—ã—Ö —Å–æ–≤–µ—Ç–æ–≤ –∏ –≤–µ—á–Ω–æ–≥–æ ¬´–ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∑–∞–≥–æ–≤–æ—Ä–∏—Ç¬ª? –ù–µ –∂–¥–∏—Ç–µ ‚Äì –ø–æ–º–æ–≥–∏—Ç–µ –º–∞–ª—ã—à—É –≥–æ–≤–æ—Ä–∏—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∂–µ —Å–µ–π—á–∞—Å!\n" +
    "\n" +
    "üîπ –î–ª—è –∫–æ–≥–æ —ç—Ç–æ—Ç –∏–Ω—Ç–µ–Ω—Å–∏–≤?\n" +
    " ‚úîÔ∏è –†–æ–¥–∏—Ç–µ–ª–µ–π –¥–µ—Ç–µ–π –æ—Ç 1 –¥–æ 3,5 –ª–µ—Ç\n" +
    " ‚úîÔ∏è –¢–µ—Ö, –∫—Ç–æ –ø–µ—Ä–µ–∂–∏–≤–∞–µ—Ç –∏–∑-–∑–∞ –∑–∞–¥–µ—Ä–∂–∫–∏ —Ä–µ—á–∏ –∏ –Ω–µ —Ö–æ—á–µ—Ç ¬´–ø—Ä–æ—Å—Ç–æ –∂–¥–∞—Ç—å¬ª\n" +
    " ‚úîÔ∏è –ö—Ç–æ —É—Å—Ç–∞–ª –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∏—Å—Ç–µ—Ä–∏–∫ –Ω–µ –≥–æ–≤–æ—Ä—è—â–µ–≥–æ –º–∞–ª—ã—à–∞\n" +
    " ‚úîÔ∏è –ö–æ–≥–æ –∑–∞–ø—É—Ç–∞–ª–∞ –∫—É—á–∞ —Å–æ–≤–µ—Ç–æ–≤ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞\n" +
    " ‚úîÔ∏è –ß—å–∏ –¥–µ—Ç–∏ —Ä–æ–¥–∏–ª–∏—Å—å —Ä–∞–Ω—å—à–µ —Å—Ä–æ–∫–∞ –∏–ª–∏ –≤ –¥–≤—É—è–∑—ã—á–Ω–æ–π —Å–µ–º—å–µ\n" +
    " ‚úîÔ∏è –ö—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å —Ä–µ—á—å –º–∞–ª—ã—à–∞ –±–µ–∑ –æ—à–∏–±–æ–∫\n" +
    "\n" +
    "üéØ –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞ –∏–Ω—Ç–µ–Ω—Å–∏–≤–µ?\n" +
    " ‚úîÔ∏è –ß–µ—Ç–∫—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∑–∞–ø—É—Å–∫–∞ —Ä–µ—á–∏ ‚Äì –±–µ–∑ –≤–æ–¥—ã, —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –º–µ—Ç–æ–¥—ã\n" +
    " ‚úîÔ∏è 5 —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Ä–µ—á–∏ ‚Äì –ø–æ–π–º—ë—Ç–µ, –Ω–∞ –∫–∞–∫–æ–º —ç—Ç–∞–ø–µ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —É –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞\n" +
    " ‚úîÔ∏è 30+ –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ ‚Äì —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—á–µ–≤–æ–º —Ä–∞–∑–≤–∏—Ç–∏–∏\n" +
    " ‚úîÔ∏è 150+ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π ‚Äì –ø—Ä–∏–º–µ–Ω—è–π—Ç–µ —Å—Ä–∞–∑—É, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞—Å—Ç–∞–≤–∏—Ç –∂–¥–∞—Ç—å\n" +
    " ‚úîÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫—É –∫—É—Ä–∞—Ç–æ—Ä–∞ –∏ —á–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è (–≤ —Ç–∞—Ä–∏—Ñ–µ ¬´–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π¬ª)\n" +
    " ‚úîÔ∏è –ñ–∏–≤—ã–µ –≤–µ–±–∏–Ω–∞—Ä—ã ‚Äì –≤–µ–±–∏–Ω–∞—Ä—ã –≤ –∑–∞–ø–∏—Å–∏\n" +
    " ‚úîÔ∏è –£–¥–æ–±–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–æ—Ä–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ —á–∞—Ç-–±–æ—Ç–µ:\n" +
    "\n" +
    "‚ùó –í–ù–ò–ú–ê–ù–ò–ï! –ê–∫—Ü–∏—è!‚Äã\n" +
    "‚ùó –ü—Ä–∏–æ–±—Ä–µ—Ç–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤, –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –¥–≤–∞ —Ü–µ–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–∞:‚Äã\n" +
    "üî¥ 30-–º–∏–Ω—É—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å –∞–≤—Ç–æ—Ä–æ–º –∫—É—Ä—Å–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –≤–∞—à–µ–≥–æ –º–∞–ª—ã—à–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.‚Äã\n" +
    "üî¥ –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∫—É—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞.";
speakBot.start(async (ctx) => {
    try {
        const commandText = ctx.message.text.toLowerCase();
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã –∑–∞–¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ
        if (commandText === '/start@mrk_new_bot') {
            // –ü—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∏–∫–∞–∫–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
            return;
        }
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.replyWithHTML(`<b>–î–æ–±—Ä—ã–π –¥–µ–Ω—å ${ctx.message.from.first_name ? ctx.message.from.first_name : '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü'}!\n\n</b>${start}`, {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: "üí∏ –û–ü–õ–ê–¢–ò–¢–¨ üí∏", callback_data: 'apply_for_payment' },
                    ],
                    [
                        { text: "üåê –ü–æ–¥—Ä–æ–±–Ω–µ–µ üîó", url: webSpeak },
                    ],
                    [
                        { text: "üìã –¢–∞—Ä–∏—Ñ—ã üìã", callback_data: 'apply_for_tariff' },
                    ],
                ],
            }
        });
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–æ–ª—å—à–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        await ctx.reply("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏  –∏–ª–∏ —Å—Ä–∞–∑—É –æ–ø–ª–∞—Ç–∏—Ç—å", {
            reply_markup: {
                keyboard: [
                    [
                        { text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ" },
                        { text: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" }
                    ]
                ],
                resize_keyboard: true, // –î–µ–ª–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –±–æ–ª—å—à–∏–º–∏
                one_time_keyboard: false // –ö–Ω–æ–ø–∫–∏ –∏—Å—á–µ–∑–Ω—É—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
            }
        });
        // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ Telegrams –∏ User
        await consultationsService.start({
            chat_id: ctx.message.from.id,
            first_name: ctx.message.from.first_name || "default",
            last_name: ctx.message.from.last_name || "default",
            username: ctx.message.from.username || "default",
        });
    }
    catch (e) {
        console.error("Error in /start command:", e);
    }
});
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
async function sendKeyboard(ctx, text) {
    await ctx.reply(text, {
        reply_markup: {
            keyboard: [
                [
                    { text: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ" },
                    { text: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏" }
                ]
            ],
            resize_keyboard: true,
            one_time_keyboard: false
        }
    });
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async function handleMessage(data) {
    await consultationsService.saveMessage({
        chat_id: data.chat_id,
        message: data.message || "empty message",
        first_name: data.first_name || "–Ω–µ –≤–≤–µ–¥–µ–Ω–æ",
        last_name: data.last_name || "–Ω–µ –≤–≤–µ–¥–µ–Ω–æ",
        cause: data.cause || "empty_cause",
    });
    await senderService.sendMessage({
        chat_id: data.chat_id,
        message: data.message || "empty message",
        first_name: data.first_name || "–Ω–µ –≤–≤–µ–¥–µ–Ω–æ",
        last_name: data.last_name || "–Ω–µ –≤–≤–µ–¥–µ–Ω–æ",
        cause: data.cause || "empty_cause",
        username: data.username || "–Ω–µ –≤–≤–µ–¥–µ–Ω–æ",
    });
}
speakBot.command('link', async (ctx) => {
    await ctx.reply("–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url: webSpeak }
                ]
            ]
        }
    });
});
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /request
speakBot.command('pay', async (ctx) => {
    await sendKeyboard(ctx, "–û–ø–ª–∞—Ç–∞");
    console.log(ctx.message.from);
    const data = {
        chat_id: ctx.message.from.id,
        first_name: ctx.message.from.first_name,
        last_name: ctx.message.from.last_name,
        username: ctx.message.from.username,
        message: "–ü–µ—Ä–µ—Ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ä–µ—á–µ–≤–æ–≥–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞",
        cause: 'payment_press'
    };
    await handleMessage(data);
    await ctx.reply('–¢–∞—Ä–∏—Ñ ‚Äú–Ø —Å–∞–º–∞‚Äù üë©‚Äçüè´\n' +
        'üí∞ –¶–µ–Ω–∞: 11 900 ‚ÇΩ\n' +
        '\n' +
        '–¢–∞—Ä–∏—Ñ ‚Äú–í—Å–µ –∏ —Å—Ä–∞–∑—É‚Äù üöÄ\n' +
        'üí∞ –¶–µ–Ω–∞: 18 900 ‚ÇΩ\n' +
        'üè¶ –î–æ—Å—Ç—É–ø–Ω–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –æ—Ç –±–∞–Ω–∫–∞ ( –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ —Ä–∞—Å—Å—Ä–æ—á–∫–µ –ø–ª–∞—Ç–∏–º –º—ã )', {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–û–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ \"–Ø —Å–∞–º–∞\"", url: paySpeakUndefended }
                ],
                [
                    { text: "–û–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ \"–í—Å–µ –∏ —Å—Ä–∞–∑—É\"", url: paySpeakAll }
                ]
            ],
        }
    });
});
speakBot.hears('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ', async (ctx) => {
    await ctx.reply("–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url: webTerms }
                ]
            ]
        }
    });
});
speakBot.hears('–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏', async (ctx) => {
    await ctx.reply("–í—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤–∞–Ω—ã –Ω–∞ —Å–∞–π—Ç...", {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", url: webPrivacy }
                ]
            ]
        }
    });
});
speakBot.on('text', async (ctx) => {
    try {
        console.log(ctx.message.from);
        const data = {
            chat_id: ctx.message.from.id,
            first_name: ctx.message.from.first_name,
            last_name: ctx.message.from.last_name,
            username: ctx.message.from.username,
            message: ctx.message.text,
            cause: 'speak_request'
        };
        await handleMessage(data);
        await sendKeyboard(ctx, "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ...");
    }
    catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
});
speakBot.action('apply_for_payment', async (ctx) => {
    console.log(ctx.update.callback_query.from);
    const data = {
        chat_id: ctx.update.callback_query.from.id,
        first_name: ctx.update.callback_query.from.first_name,
        last_name: ctx.update.callback_query.from.last_name,
        username: ctx.update.callback_query.from.username,
        message: "–ü–µ—Ä–µ—Ö–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ä–µ—á–µ–≤–æ–≥–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞",
        cause: 'payment_press'
    };
    await handleMessage(data);
    // –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
    await ctx.answerCbQuery(); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    await ctx.reply('–¢–∞—Ä–∏—Ñ ‚Äú–Ø —Å–∞–º–∞‚Äù üë©‚Äçüè´\n' +
        'üí∞ –¶–µ–Ω–∞: 11 900 ‚ÇΩ\n' +
        '\n' +
        '–¢–∞—Ä–∏—Ñ ‚Äú–í—Å–µ –∏ —Å—Ä–∞–∑—É‚Äù üöÄ\n' +
        'üí∞ –¶–µ–Ω–∞: 18 900 ‚ÇΩ\n' +
        'üè¶ –î–æ—Å—Ç—É–ø–Ω–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –æ—Ç –±–∞–Ω–∫–∞ ( –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ —Ä–∞—Å—Å—Ä–æ—á–∫–µ –ø–ª–∞—Ç–∏–º –º—ã )', {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–û–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ \"–Ø —Å–∞–º–∞\"", url: paySpeakUndefended }
                ],
                [
                    { text: "–û–ø–ª–∞—Ç–∏—Ç—å —Ç–∞—Ä–∏—Ñ \"–í—Å–µ –∏ —Å—Ä–∞–∑—É\"", url: paySpeakAll }
                ]
            ],
        }
    });
});
speakBot.action('apply_for_tariff', async (ctx) => {
    // –í–∞—à –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
    await ctx.answerCbQuery(); // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    console.log(ctx.update.callback_query.from);
    const data = {
        chat_id: ctx.update.callback_query.from.id,
        first_name: ctx.update.callback_query.from.first_name,
        last_name: ctx.update.callback_query.from.last_name,
        username: ctx.update.callback_query.from.username,
        message: "–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã —Ä–µ—á–µ–≤–æ–≥–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–∞",
        cause: 'speak_tariff_press'
    };
    await handleMessage(data);
    await ctx.replyWithHTML('<b>–¢–∞—Ä–∏—Ñ ‚Äú–í—Å–µ –∏ —Å—Ä–∞–∑—É‚Äù üë©‚Äçüè´</b>\n' +
        '\n' +
        'üåü <b>–í —Å–æ—Å—Ç–∞–≤ –≤—Ö–æ–¥–∏—Ç:</b>\n' +
        'üéì –ë–µ—Å—Å—Ä–æ—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∫—É—Ä—Å–∞\n' +
        'üõ†Ô∏è –ü–æ—à–∞–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ—á–∏\n' +
        'üìù 5 —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–µ—á–µ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è\n' +
        'üé• –ë–æ–ª–µ–µ 30 –≤–∏–¥–µ–æ –ø–æ –∫–ª—é—á–µ–≤—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º —Ä–µ—á–µ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–µ–±–µ–Ω–∫–∞\n' +
        'üß© –ë–æ–ª–µ–µ 150 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã\n' +
        'üñ•Ô∏è 4  –≤–µ–±–∏–Ω–∞—Ä–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–±–æ—Ä\n' +
        'üìö –ö–æ–Ω—Å–ø–µ–∫—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n' +
        'üí° –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n' +
        'ü§ñ –î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—Å—ã–ª–æ—á–Ω–æ–º—É —á–∞—Ç-–±–æ—Ç—É\n' +
        '\n' +
        '‚ú® <b>–¢–æ–ª—å–∫–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞:</b>\n' +
        'üì© –†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç –∫—É—Ä–∞—Ç–æ—Ä–∞ –∏ –∞–≤—Ç–æ—Ä–∞ –∫—É—Ä—Å–∞\n' +
        '‚ùì –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –ø–æ –≤—Å–µ–º –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º\n' +
        'üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—é –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π\n' +
        'üë• –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ\n' +
        'üéÅ –¢–≤–æ—Ä—á–µ—Å–∫–∏–π —Ä–µ—á–µ–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ–∫–æ–Ω—á–∞–Ω–∏—é –∫—É—Ä—Å–∞' +
        '\n' +
        'üè¶ –î–æ—Å—Ç—É–ø–Ω–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –æ—Ç –±–∞–Ω–∫–∞ ( –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ —Ä–∞—Å—Å—Ä–æ—á–∫–µ –ø–ª–∞—Ç–∏–º –º—ã )', {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–û–ø–ª–∞—Ç–∏—Ç—å 18900 —Ä—É–±.", url: paySpeakAll }
                ],
            ],
        }
    });
    await ctx.replyWithHTML('<b>–¢–∞—Ä–∏—Ñ ‚Äú–Ø —Å–∞–º–∞‚Äù üë©‚Äçüè´</b>\n' +
        '\n' +
        'üåü <b>–í —Å–æ—Å—Ç–∞–≤ –≤—Ö–æ–¥–∏—Ç:</b>\n' +
        'üéì –ë–µ—Å—Å—Ä–æ—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∫—É—Ä—Å–∞\n' +
        'üõ†Ô∏è –ü–æ—à–∞–≥–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ—á–∏\n' +
        ' üìù 5 —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —Ä–µ—á–µ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è\n' +
        'üé• –ë–æ–ª–µ–µ 30 –≤–∏–¥–µ–æ –ø–æ –∫–ª—é—á–µ–≤—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º —Ä–µ—á–µ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–µ–±–µ–Ω–∫–∞\n' +
        'üß© –ë–æ–ª–µ–µ 150 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã\n' +
        'üñ•Ô∏è 4 –∂–∏–≤—ã—Ö –≤–µ–±–∏–Ω–∞—Ä–∞\n' +
        'üìö –ö–æ–Ω—Å–ø–µ–∫—Ç—ã –∏ –¥—Ä—É–≥–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n' +
        'üí° –ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n' +
        'ü§ñ –î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—Å—ã–ª–æ—á–Ω–æ–º—É —á–∞—Ç-–±–æ—Ç—É\n' +
        '\n' +
        'üè¶ –î–æ—Å—Ç—É–ø–Ω–∞ —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –æ—Ç –±–∞–Ω–∫–∞ ( –ø—Ä–æ—Ü–µ–Ω—Ç—ã –ø–æ —Ä–∞—Å—Å—Ä–æ—á–∫–µ –ø–ª–∞—Ç–∏–º –º—ã )', {
        reply_markup: {
            inline_keyboard: [
                [
                    { text: "–û–ø–ª–∞—Ç–∏—Ç—å 11900 —Ä—É–±.", url: paySpeakUndefended }
                ],
            ],
        }
    });
});
export { speakBot };
